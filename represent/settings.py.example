from represent.default_settings import *

DEBUG = False

# Change in production:
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'represent',        # Or path to database file if using sqlite3.
        'USER': 'postgres',         # Not used with sqlite3.
        'PASSWORD': '.',             # Not used with sqlite3.
        'HOST': 'localhost',        # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                 # Set to empty string for default. Not used with sqlite3.
    }
}

ADMINS = (
    ('Represent admins', 'xxxx@xxx.com'),
)

# Uncomment in production:
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

# Uncomment in production:
REPRESENTATIVES_BOUNDARYSERVICE_URL = 'https://127.0.0.1:8000/'

# You can put acceptable values for the Host header here,
# to protect against certain potential attacks:
# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts
# Uncomment in production:
ALLOWED_HOSTS = ['*']

# Make this unique, and don't share it with anybody.
# Change in production:
# from django.utils.crypto import get_random_string
# get_random_string(50, 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)')
SECRET_KEY = '+t(q+ljogaj(+7m@kueu-g881gb8xp_oaz)$iabxjp8a1@2#u!'

# To enable Sentry logging, ensure the raven package is installed,
# and uncomment and edit:
#
# INSTALLED_APPS.append('raven.contrib.django')
# RAVEN_CONFIG = {
#    'dsn': 'RAVEN DSN'
# }
# LOGGING['handlers']['sentry'] = {
#     'level': 'WARNING',
#     'class': 'raven.contrib.django.handlers.SentryHandler'
# }
# LOGGING['root'] = {
#     'level': 'WARNING',
#     'handlers': ['sentry']
# }
# del LOGGING['loggers']['django.request']
